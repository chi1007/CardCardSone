version: "3"

services:
  flask:
    image: test-flask
    build:
      context: .
      dockerfile: ./env/flask/Dockerfile
    environment:
      - FLASK_ENV
    ports:
      - 5000:5000
    volumes:
      - ./webapp:/app
    working_dir: /app
    networks:
      flask_test:

  # nginx:
  #   image: jonasal/nginx-certbot:5.2.0-nginx1.26.0
  #   restart: unless-stopped
  #   env_file:
  #     - ./env/nginx/nginx-certbot.env
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - flask
  #   volumes:
  #     - nginx_secrets:/etc/letsencrypt
  #     - ./env/nginx/user_conf.d:/etc/nginx/user_conf.d
  #   networks:
  #       flask_test:

  nginx:
    image: test-nginx
    build:
      context: .
      dockerfile: ./env/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask
    volumes:
      - ./env/nginx/www:/var/www
    networks:
      flask_test:

    
  # certbot:
  #   image: certbot/certbot
  #   command: >
  #     sh -c "certbot certonly --webroot --webroot-path /tmp/acne-challenge 
  #     -d 'cardcardsone.cloudns.be' --text --agree-tos
  #     --email S0878114@gm.ncue.edu.tw --rsa-key-size 4096 --vervbose
  #     --keep-until-expiring --preferred-challenges=http --dry-run"
  #   entrypoint: ""
  #   volumes:
  #     - "/tmp/acme-challenge/:/tmp/acme-challenge/:rw"
  #     - "/etc/letsencrypt:/etc/letsencrypt"
  #   depends_on:
  #     - nginx
  # mysql:
  #   image: test-mysql
  #   build:
  #     context: .
  #     dockerfile: ./env/mysql/Dockerfile
  #   ports:
  #     - "3306:3306"
  #   expose:
  #     - "3306"
  #   volumes:
  #     - mysql:/var/lib/mysql
  #     - ./env/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
  #   networks:
  #     flask_test:
volumes:
  #nginx_secrets:

networks:
  flask_test:
